name: CI

on:
  pull_request:
  push:

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-nightly-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
      - name: Install dependencies
        run: |
          sudo apt-get install librust-atk-dev libgtk-3-dev
        if: runner.os == 'linux'
      - name: Build & run tests
        run: cargo test
  test-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-build-nightly-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
      - name: Install dependencies
        run: |
          sudo apt-get install librust-atk-dev libgtk-3-dev
      - name: Run doc tests with all features (this also compiles README examples)
        run: cargo test --doc --all-features
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-build-nightly-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy
          override: true
      - name: Install dependencies
        run: |
          sudo apt-get install librust-atk-dev libgtk-3-dev
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- --deny warnings
